##################################################################
# LANGUAGES SERVERS
##################################################################

# VSCODE-HTML-LANGUAGE-SERVER 
[language-server.vscode-html-language-server]
command = "vscode-html-language-server"

# EMMET-LSP / github.com/olrtg
[language-server.emmet-lsp]
command = "emmet-language-server"
args = ["--stdio"]

# VSCODE-CSS-LANGUAGE-SERVER
[language-server.vscode-css-language-server]
command = "vscode-css-language-server"

# TYPESCRIPT-LANGUAGE-SERVER
[language-server.typescript-language-server]
command = "typescript-language-server"
args = ["--stdio"]

# PYLSP
# [language-server.pylsp]
# command = "pylsp"

# GOPLS
[language-server.gopls]
command = "gopls"

##################################################################
# LANGUAGES CONFIG
##################################################################

# HTML
[[language]]
name = "html"
auto-format = true
language-servers = [ "vscode-html-language-server", "emmet-lsp" ]
formatter = { command = "prettier", args = ["--parser", "typescript"]}
file-types = ["html", "gohtml"]
indent = {tab-width = 2, unit = "  "}

# CSS
[[language]]
name = "css"
auto-format = false
language-servers = [{name = "vscode-css-language-server"}]
formatter = { command = "prettier", args = ["--parser", "typescript"]}
indent = {tab-width = 2, unit = "  "}

# JAVASCRIPT
[[language]]
name = "javascript"
auto-format = false
language-servers = [{name = "typescript-language-server"}]
formatter = { command = "prettier", args = ["--parser", "typescript"]}
indent = {tab-width = 2, unit = "  "}

# TYPESCRIPT
[[language]]
name = "typescript"
auto-format = false
language-servers = [{name = "typescript-language-server"}]
indent = {tab-width = 4, unit = "    "}

# PYTHON
# [[language]]
# name = "python"
# auto-format = false
# language-servers = [{name = "pylsp"}]
# formatter = {command = "black", args = ["--quiet", "-"]}
# indent = {tab-width = 4, unit = "    "}
# shebangs = ["python"]

# GO
[[language]]
name = "go"
auto-format = true
formatter = { command = "goimports" }
language-servers = [{name = "gopls"}]
indent = {tab-width = 4, unit = "    "}

[[language]]
name = "gomod"
auto-format = false
language-servers = [{name = "gopls"}]
indent = {tab-width = 4, unit = "    "}

[[language]]
name = "gotmpl"
auto-format = false
language-servers = [{name = "gopls"}]
indent = {tab-width = 4, unit = "    "}

[[language]]
name = "gowork"
auto-format = false
language-servers = [{name = "gopls"}]
indent = {tab-width = 4, unit = "    "}

# GO 2
# [[language]]
# name = "go"
# auto-format = true
# formatter = { command = "goimports" }
# language-servers = [ "gopls", "golangci-lint-lsp" ]

# [language-server.gopls]
# command = "gopls"
# args = ["-logfile=/tmp/gopls.log",  "serve"]

# [language-server.gopls.config]
# "ui.diagnostic.staticcheck" = true

# [language-server.gopls.config.hints]
# assignVariableTypes = true
# compositeLiteralFields = true
# compositeLiteralTypes = true
# constantValues = true
# functionTypeParameters = true
# parameterNames = true
# rangeVariableTypes = true

# [language-server.golangci-lint-lsp]
# command = "golangci-lint-langserver"

# [language-server.golangci-lint-lsp.config]
# command = [
#   "golangci-lint",
#   "run",
#   "-D",
#   "deadcode",
#   "varcheck",
#   "scopelint",
#   "nosnakecase",
#   "maligned",
#   "-E",
#   "revive",
#   "forbidigo",
#   "bidichk",
#   "dupl",
#   "errcheck",
#   "exhaustive",
#   "exhaustruct",
#   "gocritic",
#   "goimports",
#   "gosec",
#   "govet",
#   "perfsprint",
#   "prealloc",
#   "staticcheck",
#   "unparam",
#   "unused",
#   "--out-format",
#   "json",
#   "--issues-exit-code=1",
# ]

# [language-server.golangci-lint-lsp]
# command = "golangci-lint-langserver"

# [language-server.golangci-lint-lsp.config]
# command = [ "golangci-lint", "run", "errcheck", "--out-format", "json", "--issues-exit-code=1" ]

# language-servers = ["golangci-lint", "gopls"]
# [language-server.gopls]
# command = "gopls"
# config = { "gofumpt" = true, "local" = "goimports", "semanticTokens" = true, "staticcheck" = true, "verboseOutput" = true, "analyses" = { "fieldalignment" = true, "nilness" = true, unusedparams = true, unusedwrite = true, useany = true }, usePlaceholders = true, completeUnimported = true, hints = { "assignVariableType" = true, "compositeLiteralFields" = true, "compositeLiteralTypes" = true, "constantValues" = true, "functionTypeParameters" = true, "parameterNames" = true, "rangeVariableTypes" = true } }
